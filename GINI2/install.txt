Common Requirements:
-python (2.5 or 2.6)
-PyQt4
-wireshark
-matplotlib (only necessary if graphing)

On Windows:
-pyreadline
-putty (add to environment PATH)

On Linux:
-screen
-uml_mconsole
-sshd running on server

About:
The newest version of gbuilder works in 2 parts: the frontend and the backend.  The frontend is basically just the GUI, which can configure, save, compile and talk to the backend.  The backend so far only consists of 2 files (gserver.py and TaskManager.py), plus the old version of GINI.  It mainly uses gloader and all the virtual devices, but none of the old gbuilder.   

Instructions:
To play around with the frontend it is fairly simple, just downloading the repository and having all the requirements should be sufficient.  The backend is a little more complicated, but still not that bad.  If you don't plan on running anything, you only need to follow the instructions of Frontend.

Fontend:
-set environment variable GINI_HOME to the full path of directory GINI2 within the repository
-the program is located at GINI2/gbuilder/gbuilder.py

Backend:
-make sure you have the old GINI installed with environment variable GINI_HOME set on the server of your choice 
-copy the 2 files gserver.py and TaskManager.py located at GINI2/gserver/ to the home directory of the server of your choice
-replace gloader.py in the old gini with the gloader.py file located at GINI2/gserver 
-in the old gini_nw.py code:
    -in method getVMs, change the line that sets newVM.fileSystem.name = ... to 
        newVM.fileSystem.name = os.environ["GINI_HOME"] + "/" + self.getTextPart(para)
    -do the same for mobiles (VMB)
    -if not imported, you have to import os at the top
-in the gloader.dtd (in etc/), on the second line, change vs to be first:
    <!ELEMENT gloader (vs*, vr*, vwr*, vm*, vmb*)>
-in $GINI_HOME/bin, add a script called gwcenter.sh with code:
    gwcenter $* | tee $GINI_HOME/tmp/gwc.out
    
Connecting:
-the first time configuration or options will let you specify the server
-if a session name (for Windows putty) is provided, the server will be ignored (this option is ideal for windows because putty can load keys for passwordless login
-there is an added feature to run the server at startup of the program, which is recommended
-if not using this feature, or running the server manually, press the start server button
-pressing the run button includes saving, compiling (if enabled), running the client and running the topology

The server/client connection uses ssh tunneling to forward ports.  If you try to run the server manually, it will most likely not work unless you set it up correctly.


